# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: wx-bot-build
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]


jobs:
  releases:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

        with:
          tag_name: v1.0.5
          release_name: Release  v1.0.5
          draft: false
          prerelease: false
  build:
    needs: releases
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, macos, macos-arm, windows]
#
        include:
          - build: linux
            os: ubuntu-22.04
            release-file-suffix: x86_64-linux.tar.gz
          - build: macos
            os: macos-12
            release-file-suffix: x86_64-macos.tar.gz
          - build: macos-arm
            os: macos-15
            release-file-suffix: arm64-macos.tar.gz
          - build: windows
            os: windows-latest
            release-file-suffix: x86_64-windows.7z
        python-version: [3.9]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |   
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    - name: pg
      run: |
        pyinstaller -w -F --onefile  main.py -n   main
    - name: Package
      shell: bash
      working-directory: .
      run: |
          if [ "${{ matrix.build }}" =  "windows" ];then
             7z a -r "bless-${{ matrix.build }}-${{ matrix.release-file-suffix }}" ./dist/* 
          else
             tar -zcvf bless-${{ matrix.build }}-${{ matrix.release-file-suffix }}    ./dist 
          fi
    - name: Upload assets
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
      with:
        upload_url: ${{needs.releases.outputs.upload_url }}
        asset_path: bless-${{ matrix.build }}-${{ matrix.release-file-suffix }}
        asset_name: bless-${{ matrix.build }}-${{ matrix.release-file-suffix }}
        asset_content_type: application/gzip
